/* rules */

/* stylelint-disable declaration-no-important */
/* stylelint-disable selector-no-universal */

/* import */

@import '../Styles/Vars.css';

/* styles */

.sidebarContent {
  bottom: calc(var(--header-height) - 1px);
}

.footer {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: var(--header-height);
  padding: 0.5bl;
  border-top: 1px solid var(--gray);
  z-index: 200;
}

.input {
  display: block;
}

/* items */

.item {
  position: relative;
  padding: 0.5bl;
  margin-bottom: 1px;
  transition: background var(--trans-anima);
  text-align: left;
  cursor: pointer;

  &:nth-child(odd) {
    background-color: var(--table-row-odd);
  }

  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    width: calc(100% + 1px);
    height: calc(1.5bl + 1px);
    pointer-events: none;
    transition: border var(--trans-anima);
  }

  &::before {
    top: -1px;
    left: -1px;
    border-top: 1px solid var(--table-border-color);
    border-left: 1px solid var(--table-border-color);
  }

  &::after {
    bottom: -1px;
    right: -1px;
    border-bottom: 1px solid var(--table-border-color);
    border-right: 1px solid var(--table-border-color);
  }

  &:hover {
    background-color: color(var(--selected-color) tint(80%)) !important;
    z-index: 1;

    &::before,
    &::after {
      border-color: var(--selected-color);
    }
  }

  :global {
    .ReactCodeMirror,
    .CodeMirror {
      position: static;
      margin-top: 0.25bl;
      font-weight: normal;

      * {
        cursor: pointer !important;
        user-select: none !important;
      }
    }
  }
}

.activeVersion {
  font-weight: bold;
}
